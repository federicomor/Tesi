# y_NA
# Number of elements to set as NA
y_NA = y
ndata = size(y)[1] * size(y)[2]
set.seed(113)
na_percentage = 0.1
# na_percentage = 0.09620821
n_na <- round(ndata * na_percentage) # nstations * nday * na%
cat(n_na,"\n")
# Randomly sample positions to be set as NA
na_indices_j <- sample(size(y)[1], n_na,replace = T)
na_indices_t <- sample(size(y)[2], n_na,replace = T)
for (k in 1:n_na){
# 	cat("NAing index (",na_indices_j[k],",",na_indices_t[k],")\n")
y_NA[na_indices_j[k], na_indices_t[k]] = NA
}
# Check the dataset
cat(sum(is.na(y_NA)))
# y_NA
# Number of elements to set as NA
y_NA = y
ndata = size(y)[1] * size(y)[2]
set.seed(113)
na_percentage = 0.1
# na_percentage = 0.09620821
n_na <- round(ndata * na_percentage) # nstations * nday * na%
cat(n_na,"\n")
# Randomly sample positions to be set as NA
na_indices_j <- sample(size(y)[1], n_na,replace = T)
na_indices_t <- sample(size(y)[2], n_na,replace = T)
for (k in 1:n_na){
# 	cat("NAing index (",na_indices_j[k],",",na_indices_t[k],")\n")
y_NA[na_indices_j[k], na_indices_t[k]] = NA
}
# Check the dataset
cat(sum(is.na(y_NA)))
# y_NA
# Number of elements to set as NA
y_NA = y
ndata = size(y)[1] * size(y)[2]
set.seed(113)
na_percentage = 0.1
# na_percentage = 0.09620821
n_na <- round(ndata * na_percentage) # nstations * nday * na%
cat(n_na,"\n")
# Randomly sample positions to be set as NA
na_indices_j <- sample(size(y)[1], n_na,replace = T)
na_indices_t <- sample(size(y)[2], n_na,replace = T)
for (k in 1:n_na){
cat("NAing index (",na_indices_j[k],",",na_indices_t[k],")\n")
y_NA[na_indices_j[k], na_indices_t[k]] = NA
}
# Check the dataset
cat(sum(is.na(y_NA)))
# y_NA
# Number of elements to set as NA
y_NA = y
ndata = size(y)[1] * size(y)[2]
set.seed(113)
na_percentage = 0.1
# na_percentage = 0.09620821
n_na <- round(ndata * na_percentage) # nstations * nday * na%
cat(n_na,"\n")
# Randomly sample positions to be set as NA
na_indices_j <- sample(size(y)[1], n_na,replace = T)
na_indices_t <- sample(size(y)[2], n_na,replace = T)
for (k in 1:n_na){
cat("NAing index (",na_indices_j[k],",",na_indices_t[k],")\n")
y_NA[na_indices_j[k], na_indices_t[k]] = NA
}
# Check the dataset
cat(sum(is.na(y_NA)))
# y_NA
y_NA
yred=y
cols = colora(N,"div",0)
# cols = colora(N,56,0)
cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred_NA,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
yred=y
cols = colora(N,"div",0)
# cols = colora(N,56,0)
cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 8
cexs = 1.2
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
yred=y
# cols = colora(N,"div",0)
cols = colora(N,56,0)
# cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 8
cexs = 1.2
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
set.seed(111)
# Number of elements to set as NA
y_NA = y
ndata = size(y)[1] * size(y)[2]
set.seed(111)
na_percentage = 0.1
# na_percentage = 0.09620821
n_na <- round(ndata * na_percentage) # nstations * nday * na%
cat(n_na,"\n")
# Randomly sample positions to be set as NA
na_indices_j <- sample(size(y)[1], n_na,replace = T)
na_indices_t <- sample(size(y)[2], n_na,replace = T)
for (k in 1:n_na){
# cat("NAing index (",na_indices_j[k],",",na_indices_t[k],")\n")
y_NA[na_indices_j[k], na_indices_t[k]] = NA
}
# Check the dataset
cat(sum(is.na(y_NA)))
# y_NA
yred=y
# cols = colora(N,"div",0)
cols = colora(N,56,0)
# cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 8
cexs = 1.2
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
yred=y
# cols = colora(N,"div",0)
cols = colora(N,56,0)
# cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 4
cexs = 1.2
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
yred=y
# cols = colora(N,"div",0)
cols = colora(N,56,0)
# cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 5
cexs = 1.2
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
yred=y
# cols = colora(N,"div",0)
cols = colora(N,56,0)
# cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 16
cexs = 1
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
yred=y
# cols = colora(N,"div",0)
cols = colora(N,56,0)
# cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 17
cexs = 1
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
# Number of elements to set as NA
y_NA = y
ndata = size(y)[1] * size(y)[2]
set.seed(314)
na_percentage = 0.1
# na_percentage = 0.09620821
n_na <- round(ndata * na_percentage) # nstations * nday * na%
cat(n_na,"\n")
# Randomly sample positions to be set as NA
na_indices_j <- sample(size(y)[1], n_na,replace = T)
na_indices_t <- sample(size(y)[2], n_na,replace = T)
for (k in 1:n_na){
# cat("NAing index (",na_indices_j[k],",",na_indices_t[k],")\n")
y_NA[na_indices_j[k], na_indices_t[k]] = NA
}
# Check the dataset
cat(sum(is.na(y_NA)))
# y_NA
yred=y
# cols = colora(N,"div",0)
cols = colora(N,56,0)
# cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 17
cexs = 1
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
# Number of elements to set as NA
y_NA = y
ndata = size(y)[1] * size(y)[2]
set.seed(3456)
na_percentage = 0.1
# na_percentage = 0.09620821
n_na <- round(ndata * na_percentage) # nstations * nday * na%
cat(n_na,"\n")
# Randomly sample positions to be set as NA
na_indices_j <- sample(size(y)[1], n_na,replace = T)
na_indices_t <- sample(size(y)[2], n_na,replace = T)
for (k in 1:n_na){
# cat("NAing index (",na_indices_j[k],",",na_indices_t[k],")\n")
y_NA[na_indices_j[k], na_indices_t[k]] = NA
}
# Check the dataset
cat(sum(is.na(y_NA)))
# y_NA
yred=y
# cols = colora(N,"div",0)
cols = colora(N,56,0)
# cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 17
cexs = 1
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
yred=y
# cols = colora(N,"div",0)
cols = colora(N,56,0)
# cols = colora(N,"div",seed_div = "Paired",show = 0)
save_plots=F
# yred=y
# cols = colora(N,"div",0)
if (save_plots==TRUE) {
pdf(file="clusters_J.pdf",height = 6,width=11)
}
par(mar=c(2,2,2,1))
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],ylim=extrema(yred,yredORIG),type='l',
xlab='time',
main='Clusters according to model J-DRPM (NA data)')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
for(i in 1:N){
for (t in 1:Tm){
pchh = 19
if (is.na(y_NA[i,t])){
pchh = 17
cexs = 1
points(t,yred[i,t],col="black",pch=pchh,cex=cexs)
}
}
}
a_sigma  = 0.01; b_sigma = 0.01
# a_tau    = 2.1; b_tau   = 0.9
# a_tau    = 1.7; b_tau   = 0.4
a_tau    = 1.9; b_tau   = 0.4
# a_lambda = 0.1; b_lambda = 0.1
a_lambda = 1.9; b_lambda = 0.4
# module_JDRPM <- juliaImport(juliaCall("include", module))
out = module_JDRPM$MCMC_fit(
Y=as.matrix(y_NA),
sp_coords = s_std,
M_dp = 1,
initial_partition = NA,
Xlk_covariates = NA,
Xcl_covariates = NA,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
time_specific_alpha = TRUE,
update_alpha = TRUE,
include_eta1 = TRUE,
include_phi1 = T,
update_eta1 = update_eta1,
update_phi1 = T,
sig2h_priors = c(a_sigma,b_sigma),
eta1_priors = c(eta1_scale,sig_mh_eta1),
# beta_priors = c(rep(1,p),2),
beta_priors = NA,
tau2_priors = c(a_tau,b_tau),
phi0_priors = c(m0_phi0,s20_phi0),
phi1_priors = sig_mh_phi1,
lambda2_priors = c(a_lambda,b_lambda),
alpha_priors = c(a_alpha,b_alpha),
######## space
spatial_cohesion_idx = spatial_cohesion,
sp_params = list(c(mu0,mu0),k0,v0,matrix(c(L0,0.0,0.0,L0),nrow=2)),
######## likelihood covariates
# Xlk_covariates = X_lk, beta_priors = c(rep(0,p),1),
# Xlk_covariates = NA, beta_priors = NA,
######## clustering covariates
# covariate_similarity_idx = 4,
# cv_params = list(0,1,2,2),
# Xcl_covariates = X_cl,
# spatial_cohesion_idx = 1,
# sp_params = list(0.1),
# covariate_similarity_idx = NA,
draws = niter,burnin = nburn, thin = nthin,
# draws = 1000,burnin = 20, thin = 4,
logging = F,
seed = 113.0,
simple_return = FALSE,
verbose = T,
perform_diagnostics = TRUE
)
