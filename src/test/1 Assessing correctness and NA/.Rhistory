covariata = "WE_tot_precipitation"
plot4 = get_boxplot_covariate_plot(df_cluster_cut,cols,titolo=covariata,
covariata = covariata,annotate = F)
covariata = "WE_blh_layer_max"
plot5 = get_boxplot_covariate_plot(df_cluster_cut,cols,titolo=covariata,
covariata = covariata,annotate = F)
covariata = "EM_nh3_sum"
plot6 = get_boxplot_covariate_plot(df_cluster_cut,cols,titolo=covariata,
covariata = covariata,annotate = F)
covariata = "Altitude"
plot7 = get_boxplot_covariate_plot(df_cluster_cut,cols,titolo=covariata,
covariata = covariata,annotate = F)
# g <- arrangeGrob(
# 	plot1, plot2, plot3, plot4, plot5,
# 			   widths = c(2, 1, 1),
#   layout_matrix = rbind(c(1, 2, 3),
#                         c(1, 4, 5)))
g <- arrangeGrob(
plot1, plot2, plot3, plot4, plot5, plot6, plot7,
# widths = c(1, 1, 1, 1),
heights = c(1, 1, 1.8, 1.8),
# layout_matrix = rbind(c(1, 1, 2, 2),
# c(1, 1, 2, 2),
# c(3, 4, 5, 6)
layout_matrix = rbind(c(1, 1, 1, 1, 1, 2, 2, 2),
c(1, 1, 1, 1, 1, 2, 2, 2),
c(1, 1, 1, 1, 1, 7, 7, 7),
c(3, 3, 4, 4, 5, 5, 6, 6)
))
ggsave(file=paste0(folder,model_name,"_t",cur_num,".pdf"),plot = g,
# units="px",width=2500, height=1200, dpi=300)
# units="px",width=4500, height=2000, dpi=300)
# units="px",width=3600, height=1500, dpi=300)
# units="px",width=3000, height=2400, dpi=300)
units="px",width=3300, height=2600, dpi=300)
# units="px",width=2880, height=1200, dpi=300)
dev.off()
clusters_old = clusters_now
}
sites_full = data.frame(
longitude = unique(df_wsc$Longitude),
latitude = unique(df_wsc$Latitude))
stations = unique(df_wsc$IDStations)
yfull=data.frame()
target = "AQ_pm10"
for(st in stations){
y_we_pm10=cbind(as.data.frame(st),t(df_wsc[which(df_wsc$IDStations==st),target]))
yfull=rbind(yfull,y_we_pm10)
}
rownames(yfull) = NULL
colnames(yfull)<- c("id",paste0("w", 1:(size(yfull)[2]-1)))
# time_span = 1:14 # GOOD
# time_span = 1:4
time_span = 1:12
set.seed(110)
# quanti = 80; nsubjects = sample(1:105, quanti,replace = F)
# quanti = 30; nsubjects = sample(1:105, quanti,replace = F) #GOOD
# quanti = 60; nsubjects = sample(1:105, quanti,replace = F)
nsubjects = 1:105
y = yfull[nsubjects,1+time_span]
#############################################
# authors suggested to/did scale the spatial locations and also centered the observations
mn <- apply(y,2,mean)
sd <- apply(y,2,sd)
y <- t(t(y) - mn)
# y <- t(t(y) - mn)+1 # shifted 1
Tm = tps <- ncol(y) # time span
N = size(y)[1] # number of units
num_units = N
sites = sites_full[nsubjects,]
smn <- apply(sites,2,mean)
ssd <- apply(sites,2,sd)
s_std <- t((t(sites) - smn)/ssd)
# check
# mean(s_std[,1])
# mean(s_std[,2])
# var(s_std[,2])
# var(s_std[,1])
######################################
# yred=(y[,time_span]+0.5)*2
yred=y
par(mar=c(2,2,2,1))
# par(mar=c(4,4,2,2))
cols = colora(size(yred)[1],56,0)
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],
# ylim=extrema(as.matrix(yred[,-c(1)])),
ylim=extrema(as.matrix(yred)),
type='l',xlab='weeks',ylab='pm10')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
# for(i in 1:N){
# 	text(1,yred[i,1],i,cex=0.7)
# }
# -> we have
# y = yred
y
s_std
plot(s_std)
rownames(s_std) = NULL
sites_full = data.frame(
longitude = unique(df_wsc$Longitude),
latitude = unique(df_wsc$Latitude))
stations = unique(df_wsc$IDStations)
# targets = c("AQ_pm10","WE_tot_precipitation","LA_lvi","WE_blh_layer_max","Altitude","EM_nox_sum","EM_nh3_sum")
targets = colnames(df_wsc)[6:37]
for (target in targets){
cat(target,"\n")
yfull=data.frame()
if (typeof(unique(df_wsc[,target][[1]])) != "character"){
for(st in stations){
y_we_pm10=cbind(as.data.frame(st),t(df_wsc[which(df_wsc$IDStations==st),target]))
yfull=rbind(yfull,y_we_pm10)
}
rownames(yfull) = NULL
colnames(yfull)<- c("id",paste0("w", 1:(size(yfull)[2]-1)))
# time_span = 1:14 # GOOD
# time_span = 1:4
time_span = 1:12
set.seed(110)
# quanti = 80; nsubjects = sample(1:105, quanti,replace = F)
# quanti = 30; nsubjects = sample(1:105, quanti,replace = F) #GOOD
# quanti = 60; nsubjects = sample(1:105, quanti,replace = F)
nsubjects = 1:105
y = yfull[nsubjects,1+time_span]
#############################################
# authors suggested to/did scale the spatial locations and also centered the observations
mn <- apply(y,2,mean)
sd <- apply(y,2,sd)
y <- t(t(y) - mn)
# y <- t(t(y) - mn)+1 # shifted 1
Tm = tps <- ncol(y) # time span
N = size(y)[1] # number of units
num_units = N
sites = sites_full[nsubjects,]
smn <- apply(sites,2,mean)
ssd <- apply(sites,2,sd)
s_std <- t((t(sites) - smn)/ssd)
# check
# mean(s_std[,1])
# mean(s_std[,2])
# var(s_std[,2])
# var(s_std[,1])
######################################
# yred=(y[,time_span]+0.5)*2
yred=y
save_plot=T
folder = "./all_covariates_trend/"
if (save_plot==T) { pdf(file=paste0(folder,target,".pdf"),width = 8,height = 5)}
par(mar=c(2,2,2,1))
col_idx = 1
for(i in ranked_indices){
if(i==ranked_indices[1]){
plot(1:size(yred)[2],yred[i,],col=cols[col_idx],
# ylim=extrema(as.matrix(yred[,-c(1)])),
ylim=extrema(as.matrix(yred)),main=target,
type='l',xlab='weeks',ylab='pm10')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[col_idx])
}
col_idx = col_idx+1
}
if (save_plot==T) {dev.off()}
}
}
sites_full = data.frame(
longitude = unique(df_wsc$Longitude),
latitude = unique(df_wsc$Latitude))
stations = unique(df_wsc$IDStations)
yfull=data.frame()
target = "AQ_pm10"
for(st in stations){
y_we_pm10=cbind(as.data.frame(st),t(df_wsc[which(df_wsc$IDStations==st),target]))
yfull=rbind(yfull,y_we_pm10)
}
rownames(yfull) = NULL
colnames(yfull)<- c("id",paste0("w", 1:(size(yfull)[2]-1)))
# time_span = 1:14 # GOOD
# time_span = 1:4
time_span = 1:12
set.seed(110)
# quanti = 80; nsubjects = sample(1:105, quanti,replace = F)
# quanti = 30; nsubjects = sample(1:105, quanti,replace = F) #GOOD
# quanti = 60; nsubjects = sample(1:105, quanti,replace = F)
nsubjects = 1:105
y = yfull[nsubjects,1+time_span]
#############################################
# authors suggested to/did scale the spatial locations and also centered the observations
mn <- apply(y,2,mean)
sd <- apply(y,2,sd)
y <- t(t(y) - mn)
# y <- t(t(y) - mn)+1 # shifted 1
Tm = tps <- ncol(y) # time span
N = size(y)[1] # number of units
num_units = N
sites = sites_full[nsubjects,]
smn <- apply(sites,2,mean)
ssd <- apply(sites,2,sd)
s_std <- t((t(sites) - smn)/ssd)
# check
# mean(s_std[,1])
# mean(s_std[,2])
# var(s_std[,2])
# var(s_std[,1])
######################################
# yred=(y[,time_span]+0.5)*2
yred=y
par(mar=c(2,2,2,1))
# par(mar=c(4,4,2,2))
cols = colora(size(yred)[1],56,0)
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],
# ylim=extrema(as.matrix(yred[,-c(1)])),
ylim=extrema(as.matrix(yred)),
type='l',xlab='weeks',ylab='pm10')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
# for(i in 1:N){
# 	text(1,yred[i,1],i,cex=0.7)
# }
# -> we have
# y = yred
y
s_std
plot(s_std)
rownames(s_std) = NULL
yred=y
# unit_summary <- rowMeans(yred)
unit_summary <- apply(yred, 1, median)
# unit_summary <- yred[,1]
cols = colora(105,111,0)
ranked_indices <- order(unit_summary, decreasing=TRUE)
par(mar=c(2,2,2,1))
col_idx = 1
for(i in ranked_indices){
if(i==ranked_indices[1]){
plot(1:size(yred)[2],yred[i,],col=cols[col_idx],
# ylim=extrema(as.matrix(yred[,-c(1)])),
ylim=extrema(as.matrix(yred)),
type='l',xlab='weeks',ylab='pm10')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[col_idx])
}
col_idx = col_idx+1
}
sites_full = data.frame(
longitude = unique(df_wsc$Longitude),
latitude = unique(df_wsc$Latitude))
stations = unique(df_wsc$IDStations)
# targets = c("AQ_pm10","WE_tot_precipitation","LA_lvi","WE_blh_layer_max","Altitude","EM_nox_sum","EM_nh3_sum")
targets = colnames(df_wsc)[6:37]
for (target in targets){
cat(target,"\n")
yfull=data.frame()
if (typeof(unique(df_wsc[,target][[1]])) != "character"){
for(st in stations){
y_we_pm10=cbind(as.data.frame(st),t(df_wsc[which(df_wsc$IDStations==st),target]))
yfull=rbind(yfull,y_we_pm10)
}
rownames(yfull) = NULL
colnames(yfull)<- c("id",paste0("w", 1:(size(yfull)[2]-1)))
# time_span = 1:14 # GOOD
# time_span = 1:4
time_span = 1:12
set.seed(110)
# quanti = 80; nsubjects = sample(1:105, quanti,replace = F)
# quanti = 30; nsubjects = sample(1:105, quanti,replace = F) #GOOD
# quanti = 60; nsubjects = sample(1:105, quanti,replace = F)
nsubjects = 1:105
y = yfull[nsubjects,1+time_span]
#############################################
# authors suggested to/did scale the spatial locations and also centered the observations
mn <- apply(y,2,mean)
sd <- apply(y,2,sd)
y <- t(t(y) - mn)
# y <- t(t(y) - mn)+1 # shifted 1
Tm = tps <- ncol(y) # time span
N = size(y)[1] # number of units
num_units = N
sites = sites_full[nsubjects,]
smn <- apply(sites,2,mean)
ssd <- apply(sites,2,sd)
s_std <- t((t(sites) - smn)/ssd)
# check
# mean(s_std[,1])
# mean(s_std[,2])
# var(s_std[,2])
# var(s_std[,1])
######################################
# yred=(y[,time_span]+0.5)*2
yred=y
save_plot=T
folder = "./all_covariates_trend/"
if (save_plot==T) { pdf(file=paste0(folder,target,".pdf"),width = 8,height = 5)}
par(mar=c(2,2,2,1))
col_idx = 1
for(i in ranked_indices){
if(i==ranked_indices[1]){
plot(1:size(yred)[2],yred[i,],col=cols[col_idx],
# ylim=extrema(as.matrix(yred[,-c(1)])),
ylim=extrema(as.matrix(yred)),main=target,
type='l',xlab='weeks',ylab='pm10')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[col_idx])
}
col_idx = col_idx+1
}
if (save_plot==T) {dev.off()}
}
}
sites_full = data.frame(
longitude = unique(df_wsc$Longitude),
latitude = unique(df_wsc$Latitude))
stations = unique(df_wsc$IDStations)
# targets = c("AQ_pm10","WE_tot_precipitation","LA_lvi","WE_blh_layer_max","Altitude","EM_nox_sum","EM_nh3_sum")
targets = colnames(df_wsc)[6:37]
for (target in targets){
cat(target,"\n")
yfull=data.frame()
if (typeof(unique(df_wsc[,target][[1]])) != "character"){
for(st in stations){
y_we_pm10=cbind(as.data.frame(st),t(df_wsc[which(df_wsc$IDStations==st),target]))
yfull=rbind(yfull,y_we_pm10)
}
rownames(yfull) = NULL
colnames(yfull)<- c("id",paste0("w", 1:(size(yfull)[2]-1)))
# time_span = 1:14 # GOOD
# time_span = 1:4
time_span = 1:12
set.seed(110)
# quanti = 80; nsubjects = sample(1:105, quanti,replace = F)
# quanti = 30; nsubjects = sample(1:105, quanti,replace = F) #GOOD
# quanti = 60; nsubjects = sample(1:105, quanti,replace = F)
nsubjects = 1:105
y = yfull[nsubjects,1+time_span]
#############################################
# authors suggested to/did scale the spatial locations and also centered the observations
mn <- apply(y,2,mean)
sd <- apply(y,2,sd)
y <- t(t(y) - mn)
# y <- t(t(y) - mn)+1 # shifted 1
Tm = tps <- ncol(y) # time span
N = size(y)[1] # number of units
num_units = N
sites = sites_full[nsubjects,]
smn <- apply(sites,2,mean)
ssd <- apply(sites,2,sd)
s_std <- t((t(sites) - smn)/ssd)
# check
# mean(s_std[,1])
# mean(s_std[,2])
# var(s_std[,2])
# var(s_std[,1])
######################################
# yred=(y[,time_span]+0.5)*2
yred=y
save_plot=T
folder = "./all_covariates_trend/"
if (save_plot==T) { pdf(file=paste0(folder,target,".pdf"),width = 11,height = 6)}
par(mar=c(2,2,2,1))
col_idx = 1
for(i in ranked_indices){
if(i==ranked_indices[1]){
plot(1:size(yred)[2],yred[i,],col=cols[col_idx],
# ylim=extrema(as.matrix(yred[,-c(1)])),
ylim=extrema(as.matrix(yred)),main=target,
type='l',xlab='weeks',ylab='pm10')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[col_idx])
}
col_idx = col_idx+1
}
if (save_plot==T) {dev.off()}
}
}
sites_full = data.frame(
longitude = unique(df_wsc$Longitude),
latitude = unique(df_wsc$Latitude))
stations = unique(df_wsc$IDStations)
yfull=data.frame()
target = "AQ_pm10"
for(st in stations){
y_we_pm10=cbind(as.data.frame(st),t(df_wsc[which(df_wsc$IDStations==st),target]))
yfull=rbind(yfull,y_we_pm10)
}
rownames(yfull) = NULL
colnames(yfull)<- c("id",paste0("w", 1:(size(yfull)[2]-1)))
# time_span = 1:14 # GOOD
# time_span = 1:4
time_span = 1:12
set.seed(110)
# quanti = 80; nsubjects = sample(1:105, quanti,replace = F)
# quanti = 30; nsubjects = sample(1:105, quanti,replace = F) #GOOD
# quanti = 60; nsubjects = sample(1:105, quanti,replace = F)
nsubjects = 1:105
y = yfull[nsubjects,1+time_span]
#############################################
# authors suggested to/did scale the spatial locations and also centered the observations
mn <- apply(y,2,mean)
sd <- apply(y,2,sd)
y <- t(t(y) - mn)
# y <- t(t(y) - mn)+1 # shifted 1
Tm = tps <- ncol(y) # time span
N = size(y)[1] # number of units
num_units = N
sites = sites_full[nsubjects,]
smn <- apply(sites,2,mean)
ssd <- apply(sites,2,sd)
s_std <- t((t(sites) - smn)/ssd)
# check
# mean(s_std[,1])
# mean(s_std[,2])
# var(s_std[,2])
# var(s_std[,1])
######################################
# yred=(y[,time_span]+0.5)*2
yred=y
par(mar=c(2,2,2,1))
# par(mar=c(4,4,2,2))
cols = colora(size(yred)[1],56,0)
for(i in 1:size(yred)[1]){
if(i==1){
plot(1:size(yred)[2],yred[i,],col=cols[i],
# ylim=extrema(as.matrix(yred[,-c(1)])),
ylim=extrema(as.matrix(yred)),
type='l',xlab='weeks',ylab='pm10')
}
else{
lines(1:size(yred)[2],yred[i,],col=cols[i])
}
}
# for(i in 1:N){
# 	text(1,yred[i,1],i,cex=0.7)
# }
# -> we have
# y = yred
y
s_std
plot(s_std)
rownames(s_std) = NULL
# as.integer(runif(1,0,1000))*1.0
seed = 888.0
# seed = 314.0
cat("seed",seed,"\n")
set.seed(seed)
# niter=10000; nburn=6000; nthin=4
# niter=50000; nburn=10000; nthin=40 # they did this in their tests
# niter=10000; nburn=0; nthin=1
# niter=20000; nburn=15000; nthin=5
# niter=50000; nburn=30000; nthin=20 # GOOD
# niter=80000; nburn=60000; nthin=20
niter=110000; nburn=90000; nthin=5
# niter=100000; nburn=60000; nthin=40
# niter=100; nburn=0; nthin=1
nout <- (niter-nburn)/nthin
cat(nout,"valid iterations\n")
niter = as.integer(niter)
nburn = as.integer(nburn)
nthin = as.integer(nthin)
# params
m0_phi0 = 0
# s20_phi0 = 8
# A_ub_sigma = 7
s20_phi0 = 10
A_ub_sigma = 5
A_ub_tau = 5
A_ub_lambda = 5
# a_sigma  = 3; b_sigma  = 4
# a_tau    = 3; b_tau    = 4
# a_lambda = 3; b_lambda = 4
# a_sigma  = 2; b_sigma  = 2
# a_tau    = 2; b_tau    = 2
# a_lambda = 2; b_lambda = 2
a_sigma  = 0.01; b_sigma  = 0.01
a_lambda = 0.1; b_lambda = 0.1
# # a_tau    = 0.1; b_tau    = 0.1
a_tau    = 2; b_tau    = 2
# a_tau    = 1; b_tau    = 1.5
# a_sigma  = 5; b_sigma  = 8
# a_tau    = 5; b_tau    = 8
# a_lambda = 5; b_lambda = 8
eta1_scale = 0.9
# mh is the of gaussian standard deviations for metropolis updates
# So these are not variances!
sig_mh_sig2 = 0.2
sig_mh_tau2 = 0.2
sig_mh_lambda2 = 0.2
sig_mh_eta1 = 0.2
sig_mh_phi1 = 0.2
update_eta1 = TRUE
update_phi1 = F
a_alpha = 2; b_alpha = 2
time_specific_alpha = TRUE
# now space
spatial_cohesion = 3
mu0 = 0
k0 = 1
v0 = 5
L0 = 1
module_JDRPM <- juliaImport(juliaCall("include", module))
