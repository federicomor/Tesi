? arima.sim
# Function that computes ``robust'' lpmls#
lpml.robust <- function(llike){#
#
	omega <- 1/exp(llike)#
	lpml <- sum(log(1/(apply(omega,2,mean))))#
	omegabar <- apply(omega,2,mean)#
	omegatil <- matrix(NA, nrow=nrow(omega), ncol=ncol(omega))#
	for(i in 1:nrow(omega)){#
		for(j in 1:ncol(omega)){#
			omegatil[i,j] <- min(omega[i,j], sqrt(nrow(omega)*omegabar[j]))#
		}#
	}#
	lpml.robust <- sum(log(1/(apply(omegatil,2,mean))))#
#
	# Compute lpml by droping iteration that produces inf#
	indx <- which(llike < -709, arr.ind=TRUE)[,1]#
	CPO <- apply(llike[-indx,], 2, function(x) mean(1/exp(x)))#
	if(length(indx) == 0){ #
		CPO <- apply(llike, 2, function(x) mean(1/exp(x)))#
	}#
	lpml.drop.inf <- sum(log(1/CPO))#
#
	# Compute lpml by removing all llike values less than#
    # the 5th quantile#
    mn95 <- function(x) mean(x[x < quantile(x, 0.95)])#
#
	lpml.quant <- sum(log(1/(apply(omega,2,mn95))))#
	# Comput lpml by summing off min (see paper for details)#
	nobs <- ncol(llike)#
	niter <- nrow(llike)#
	minll <- apply(llike,2,min)#
	tmp <- numeric()#
	for(i in 1:nobs){#
		tmp[i] <- sum(exp(minll[i] - llike[,i]))#
	}#
	lpml.log.scale <- sum(log(niter) + minll - log(tmp))#
#
    mnllike <- apply(llike, 2, mean)#
    mnlike <- apply(exp(llike), 2, mean)#
    elppWAIC <- sum(2*mnllike - log(mnlike))#
    waic <- -2*elppWAIC#
#	for(j = 0; j < *nobs; j++){#
#	  elppdWAIC = elppdWAIC + (2*mnllike[j] - log(mnlike[j]));  #
#	}#
#	waic[0] = -2*elppdWAIC; #
	out <- c(lpml, lpml.robust, lpml.log.scale, lpml.drop.inf, lpml.quant, waic)#
	names(out) <- c("lpml", #
                    "lpml.stable.gelman", #
                    "lpml.stable.log", #
                    "lpml.drop.inf", #
                    "lpml.drop.quant95",#
                    "waic")#
	out#
}
# Function that computes ``robust'' lpmls#
lpml.robust <- function(llike){#
#
	omega <- 1/exp(llike)#
	lpml <- sum(log(1/(apply(omega,2,mean))))#
	omegabar <- apply(omega,2,mean)#
	omegatil <- matrix(NA, nrow=nrow(omega), ncol=ncol(omega))#
	for(i in 1:nrow(omega)){#
		for(j in 1:ncol(omega)){#
			omegatil[i,j] <- min(omega[i,j], sqrt(nrow(omega)*omegabar[j]))#
		}#
	}#
	lpml.robust <- sum(log(1/(apply(omegatil,2,mean))))#
#
	# Compute lpml by droping iteration that produces inf#
	indx <- which(llike < -709, arr.ind=TRUE)[,1]#
	CPO <- apply(llike[-indx,], 2, function(x) mean(1/exp(x)))#
	if(length(indx) == 0){ #
		CPO <- apply(llike, 2, function(x) mean(1/exp(x)))#
	}#
	lpml.drop.inf <- sum(log(1/CPO))#
#
	# Compute lpml by removing all llike values less than#
    # the 5th quantile#
    mn99 <- function(x) mean(x[x < quantile(x, 0.99)])#
#
	lpml.quant <- sum(log(1/(apply(omega,2,mn99))))#
	# Comput lpml by summing off min (see paper for details)#
	nobs <- ncol(llike)#
	niter <- nrow(llike)#
	minll <- apply(llike,2,min)#
	tmp <- numeric()#
	for(i in 1:nobs){#
		tmp[i] <- sum(exp(minll[i] - llike[,i]))#
	}#
	lpml.log.scale <- sum(log(niter) + minll - log(tmp))#
#
    mnllike <- apply(llike, 2, mean)#
    mnlike <- apply(exp(llike), 2, mean)#
    elppWAIC <- sum(2*mnllike - log(mnlike))#
    waic <- -2*elppWAIC#
#	for(j = 0; j < *nobs; j++){#
#	  elppdWAIC = elppdWAIC + (2*mnllike[j] - log(mnlike[j]));  #
#	}#
#	waic[0] = -2*elppdWAIC; #
	out <- c(lpml, lpml.robust, lpml.log.scale, lpml.drop.inf, lpml.quant, waic)#
	names(out) <- c("lpml", #
                    "lpml.stable.gelman", #
                    "lpml.stable.log", #
                    "lpml.drop.inf", #
                    "lpml.drop.quant95",#
                    "waic")#
	out#
}
? arima.sim
N <- 100#
Tm <- 5
Ymat <- time.dat.gen(N=N, Tm=Tm)#
  Tmat <- matrix(rep(1:Tm, each=N), nrow=N, byrow=FALSE)
time.dat.gen <- function(N, Tm, auto_cor=0.5){#
  YMat <- t(replicate(N, arima.sim(n=Tm, list(ar=c(auto_cor))))) #
  YMat#
}
Ymat <- time.dat.gen(N=N, Tm=Tm)#
  Tmat <- matrix(rep(1:Tm, each=N), nrow=N, byrow=FALSE)
dim(Ymat)
dim(Tmat)
1.4/(1.4+23.6)
1.4+23.6
th <- seq(0,1,length=1001)#
#
plot(th, dbeta(th, 1.4, 23.6), type='l')
lines(th, dbeta(th, astar, bstar), col='red')
# prior#
a <- 1.4#
b <- 23.6#
#
# data#
y <- 3#
n <- 12#
#
# posterior#
astar <- y + a#
bstar <- n - y + b#
#
lines(th, dbeta(th, astar, bstar), col='red')
astar/(astar + bstar)
sqrt(astar*bstar/((astar+bstar)^2*(astar+bstar+1)))
qbeta(c(0.025, 0.975), astar, bstar)
ylong <- c(y)#
  X <- as.matrix(expand.grid(seq(0,1,length=15),seq(0,1,length=15), c(1:Tm)))
length(ylong)
dim(X)
bspline <-function(X., XL., XR., NDX., BDEG.){#
#
	dx <- (XR. - XL.)/NDX.#
	knots <- seq(XL. - BDEG.*dx, XR. + BDEG.*dx, by=dx)#
	B <- spline.des(knots, X., BDEG.+1, 0*X.)$design#
	res <- list(B = B, knots = knots)#
	res#
  }
Xbs <- cbind(bspline(seq(min(X[,1])-0.05,max(X[,1])+0.05,length=length(ylong)),min(X[,1])-0.1,max(X[,1])+0.1,10,3)$B,#
               bspline(seq(min(X[,1])-0.05,max(X[,2])+0.05,length=length(ylong)),min(X[,2])-0.1,max(X[,2])+0.1,10,3)$B,#
               X[,3])
library(BNPmix)
Xbs <- cbind(bspline(seq(min(X[,1])-0.05,max(X[,1])+0.05,length=length(ylong)),min(X[,1])-0.1,max(X[,1])+0.1,10,3)$B,#
               bspline(seq(min(X[,1])-0.05,max(X[,2])+0.05,length=length(ylong)),min(X[,2])-0.1,max(X[,2])+0.1,10,3)$B,#
               X[,3])
library(BNPmix) #DDPdensity#
library(splines) #spline.des
Xbs <- cbind(bspline(seq(min(X[,1])-0.05,max(X[,1])+0.05,length=length(ylong)),min(X[,1])-0.1,max(X[,1])+0.1,10,3)$B,#
               bspline(seq(min(X[,1])-0.05,max(X[,2])+0.05,length=length(ylong)),min(X[,2])-0.1,max(X[,2])+0.1,10,3)$B,#
               X[,3])
head(X)
ylong <- c(Ymat)
length(ylong)
class(ylong)
ylong <- c(Ymat)#
  X <- as.matrix(expand.grid(seq(0,1,length=15),seq(0,1,length=15), c(1:Tm)))#
  bspline <-function(X., XL., XR., NDX., BDEG.){#
#
	dx <- (XR. - XL.)/NDX.#
	knots <- seq(XL. - BDEG.*dx, XR. + BDEG.*dx, by=dx)#
	B <- spline.des(knots, X., BDEG.+1, 0*X.)$design#
	res <- list(B = B, knots = knots)#
	res#
  }#
  Tbs <- cbind(bspline(seq(min(X[,1])-0.05,max(X[,1])+0.05,length=length(ylong)),min(X[,1])-0.1,max(X[,1])+0.1,10,3)$B,#
               bspline(seq(min(X[,1])-0.05,max(X[,2])+0.05,length=length(ylong)),min(X[,2])-0.1,max(X[,2])+0.1,10,3)$B,#
               X[,3])
dim(X)
X <- as.matrix(expand.grid(c(1:Tm)))
X
X <- as.matrix(rep(1:Tm, each=N))
Tbs <- cbind(bspline(seq(min(Tvec)-0.05,max(Tvec)+0.05,#
                           length=length(Yvec)),#
                       min(X[,1])-0.1,max(X[,1])+0.1,10,3)$B)
Ymat <- time.dat.gen(N=N, Tm=Tm)#
  Tmat <- matrix(rep(1:Tm, each=N), nrow=N, byrow=FALSE)#
#
  Yvec <- 1*c(t(Ymat))#
  Tvec <- cbind(c(t(Tmat)))
Tbs <- cbind(bspline(seq(min(Tvec)-0.05,max(Tvec)+0.05,#
                           length=length(Yvec)),#
                       min(X[,1])-0.1,max(X[,1])+0.1,10,3)$B)
plot(Tvec, solve(t(Tbs) %*% Tbs) %*% t(Tbs) %*% Yvec)
length(Tvec)
plot(Tvec, Tbs %*% solve(t(Tbs) %*% Tbs) %*% t(Tbs) %*% Yvec)
plot(Tvec, Yvec)
lines(Tvec, Tbs %*% solve(t(Tbs) %*% Tbs) %*% t(Tbs) %*% Yvec, col='red')
solve(t(Tbs) %*% Tbs) %*% t(Tbs) %*% Yvec
dim(Tbs)
plot(Tvec[order(Tvec)], Yvec[order(Tvec)])
lines(Tvec[order(Tvec)], Tbs %*% solve(t(Tbs) %*% Tbs) %*% t(Tbs) %*% Yvec[order(Tvec)], col='red')
pp <- c(0,1,10,dim(Tbs)[2]+2,1)
lddp <- linearDDPM(draws=niter, burn=nburn, thin=nthin, y=Yvec, x=Tbs, #
                      ygrid=NULL, xpred=NULL, priorparms=pp, Mdp=1)
lddp <- linearDDP(draws=niter, burn=nburn, thin=nthin, y=Yvec, x=Tbs, #
                      ygrid=NULL, xpred=NULL, priorparms=pp, Mdp=1)
library(drpm)
lddp <- linearDDP(draws=niter, burn=nburn, thin=nthin, y=Yvec, x=Tbs, #
                      ygrid=NULL, xpred=NULL, priorparms=pp, Mdp=1)
dir <- "~/Research/BYU/SpaceTimePPM/analysis/JCGSrev/simstudyresults/"
files <- list.files(dir)#
  ari.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, ari=NULL)#
  waic.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  lpml.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  prob.peg <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, probpeg=NULL)#
  for(jj in 1:length(files)){#
    factors <- strsplit(files[jj], "\\_")[[1]][c(2,4,6,8)]#
    datatype <- as.numeric(factors[1])#
    corr <- as.numeric(factors[2])#
    stdev <- as.numeric(factors[3])#
    time <- as.numeric(factors[4])#
    metric <- strsplit(files[jj], "\\_|\\.")[[1]]#
    metric <- metric[length(metric) - 1]#
#
    tmp <- read.table(paste0(dir, files[jj]), header=TRUE)#
#
    nproc <- ncol(tmp)#
    ndata <- nrow(tmp)#
    if(metric == "ari"){#
      ari.mat <- rbind(ari.mat,#
                       data.frame(corr=rep(corr, nproc*ndata),#
                                  stdev = rep(stdev, nproc*ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  procedure = rep(colnames(tmp), each=ndata),#
                                  ari = c(unlist(tmp))))#
    }#
    if(metric == "waic"){#
      waic.mat <- rbind(waic.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "lpml"){#
      lpml.mat <- rbind(lpml.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "probpeg"){#
      prob.peg <- rbind(prob.peg,#
                        data.frame(corr=rep(corr, ndata),#
                                  stdev = rep(stdev,ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  probpeg = tmp[,1]))#
#
    }#
#
  }
row.names(waic.mat) <- row.names(ari.mat) <- row.names(lpml.mat) <- row.names(prob.peg) <- NULL#
  waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  lpml.mat$procedure <- factor(lpml.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  ari.mat$procedure <- factor(ari.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), as.factor(data$time),#
                       data$procedure),#
                median)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
#    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }#
#
  waic.mn <- data_mn(waic.mat)#
  lpml.mn <- data_mn(lpml.mat)#
  ari.mn <- data_mn(ari.mat)
library(ggplot2)
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("correlation") + ylab("WAIC")
gg.waic
row.names(waic.mat) <- row.names(ari.mat) <- row.names(lpml.mat) <- row.names(prob.peg) <- NULL#
  waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  lpml.mat$procedure <- factor(lpml.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  ari.mat$procedure <- factor(ari.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), as.factor(data$time),#
                       data$procedure),#
                median)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }
waic.mn <- data_mn(waic.mat)#
  lpml.mn <- data_mn(lpml.mat)#
  ari.mn <- data_mn(ari.mat)
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("correlation") + ylab("WAIC")
gg.waic
gg.lpml <- ggplot(data = lpml.mn[lpml.mn$datatype==1,], aes(x=as.numeric(corr), y=lpml,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("LPML")
gg.lpml
boxplot(probpeg ~ corr + stdev, data=prob.peg[prob.peg$datatype==1,],#
                 ylim=c(0,1)); abline(h=c(0.1,0.25,0.5,0.75,0.9))
gg.box.waic <- ggplot(data = waic.mat, aes(x=procedure, y=waic)) +#
                   geom_boxplot() +#
                   facet_grid(corr ~ stdev, scales="free") + theme_bw() +#
          	      xlab("procedure") + ylab("WAIC")
gg.box.waic
quat <- ggplot(data = waic.mat[waic.mat$corr < 0.91 & waic.mat$datatype==1,], aes(x=procedure, y=waic)) +#
                   geom_boxplot() +#
                   facet_grid(corr ~ stdev, scales="free") + theme_bw() +#
          	      xlab("procedure") + ylab("WAIC")
quat
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==2,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("WAIC")
gg.waic
gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==2,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("Adjusted Rand Index")
gg.ari
gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() + ylim(0,2500) +#
          	  xlab("correlation") + ylab("WAIC")
gg.waic
gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() + ylim(0,5000) +#
          	  xlab("correlation") + ylab("WAIC")
gg.waic
gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() + ylim(0,10000) +#
          	  xlab("correlation") + ylab("WAIC")
gg.waic
gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("WAIC")
gg.waic
gg.ari <- ggplot(data = ari.mat[ari.mat$datatype==4,], aes(x=procedure, y=ari)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("Adjusted Rand Index")
gg.ari
tmp <- waic.mat[waic.mat$datatype==4,]
head(tmp)
dim(tmp)
tmp[tmp$procedure=="gmddp",]
# datatype 1#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("correlation") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype1_waic2.pdf", height=6, width=6)
#datatype 2#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==2,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_waic2.pdf", height=6, width=6)
gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==2,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_ari2.pdf", height=6, width=6)
ari.mn[ari.mn$datatype==2,] -> tmp
head(tmp)
tmp[is.na(tmp$ari),]
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("correlation") + ylab("WAIC")
gg.waic
data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), as.factor(data$time),#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }
waic.mn <- data_mn(waic.mat)
lpml.mn <- data_mn(lpml.mat)
ari.mn <- data_mn(ari.mat)
ari.mn[ari.mn$datatype==2,] -> tmp
tmp[is.na(tmp$ari),]
head(waic.mn)
head(waic.mat[waic.mat$procedure == "gmddp",])
ls()
rm(list=ls())
load("~/Desktop/datatype_2_corr_0.1_stdev_0.5_time_5_fit_3.RData")
ls()
dim(ari)
head(ari)
args <- c(1, 400)
args <- c(1, 400)#
ss <- as.numeric(args[1]):as.numeric(args[2])
dir <- "~/shared/JCGS_Revision/fits/"#
dir2 <- "~/shared/JCGS_Revision/simstudyresults/"#
#
files <- list.files(dir)
jj
ss
cat("jj = ", jj, "\n")
220*2
220*3
220*4
220*8
220*9
220*10
220*111
220*11
220*12
220*13
220*(1:40)
8800/40
8800/50
8800/60
8800/80
dir <- "~/Research/BYU/SpaceTimePPM/analysis/JCGSrev/simstudyresults/"#
#
  files <- list.files(dir)#
  ari.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, ari=NULL)#
  waic.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  lpml.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  prob.peg <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, probpeg=NULL)#
  for(jj in 1:length(files)){#
    factors <- strsplit(files[jj], "\\_")[[1]][c(2,4,6,8)]#
    datatype <- as.numeric(factors[1])#
    corr <- as.numeric(factors[2])#
    stdev <- as.numeric(factors[3])#
    time <- as.numeric(factors[4])#
    metric <- strsplit(files[jj], "\\_|\\.")[[1]]#
    metric <- metric[length(metric) - 1]#
#
    tmp <- read.table(paste0(dir, files[jj]), header=TRUE)#
#
    nproc <- ncol(tmp)#
    ndata <- nrow(tmp)#
    if(metric == "ari"){#
      ari.mat <- rbind(ari.mat,#
                       data.frame(corr=rep(corr, nproc*ndata),#
                                  stdev = rep(stdev, nproc*ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  procedure = rep(colnames(tmp), each=ndata),#
                                  ari = c(unlist(tmp))))#
    }#
    if(metric == "waic"){#
      waic.mat <- rbind(waic.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "lpml"){#
      lpml.mat <- rbind(lpml.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "probpeg"){#
      prob.peg <- rbind(prob.peg,#
                        data.frame(corr=rep(corr, ndata),#
                                  stdev = rep(stdev,ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  probpeg = tmp[,1]))#
#
    }#
#
  }#
#
  row.names(waic.mat) <- row.names(ari.mat) <- row.names(lpml.mat) <- row.names(prob.peg) <- NULL#
  waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  lpml.mat$procedure <- factor(lpml.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  ari.mat$procedure <- factor(ari.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), as.factor(data$time),#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }#
#
  waic.mn <- data_mn(waic.mat)#
  lpml.mn <- data_mn(lpml.mat)#
  ari.mn <- data_mn(ari.mat)
library(ggplot2)#
  # datatype 1#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("correlation") + ylab("WAIC")
gg.waic
#datatype 2#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==2,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("WAIC")
gg.waic
gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==2,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("Adjusted Rand Index")
gg.ari
#datatype 3#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==3,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("WAIC")
gg.waic
gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==3,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("Adjusted Rand Index")
gg.ari
gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("WAIC")
gg.waic
gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() + ylim(0, 4000) +#
          	  xlab("correlation") + ylab("WAIC")
gg.waic
gg.ari <- ggplot(data = ari.mat[ari.mat$datatype==4,], aes(x=procedure, y=ari)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("Adjusted Rand Index")
gg.ari
# datatype 1#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("correlation") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype1_waic2.pdf", height=6, width=6)#
  #datatype 2#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==2,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==2,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_ari2.pdf", height=6, width=6)#
  #datatype 3#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==3,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype3_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==3,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype3_ari2.pdf", height=6, width=6)#
  #datatype 4#
  gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() + ylim(0, 4000) +#
          	  xlab("correlation") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype4_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mat[ari.mat$datatype==4,], aes(x=procedure, y=ari)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("correlation") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype4_ari2.pdf", height=6, width=6)
library(MASS)#
head(Pima.tr)
bp <- Pima.tr$bp
bp.non <- bp[Pima.tr$type == "No"]
hist(bp.non)
quartz()
hist(bp.non)
qqplot(bp.non)
dir <- "~/Research/BYU/SpaceTimePPM/analysis/JCGSrev/simstudyresults/"#
#
  files <- list.files(dir)#
  ari.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, ari=NULL)#
  waic.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  lpml.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  prob.peg <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, probpeg=NULL)#
  for(jj in 1:length(files)){#
    factors <- strsplit(files[jj], "\\_")[[1]][c(2,4,6,8)]#
    datatype <- as.numeric(factors[1])#
    corr <- as.numeric(factors[2])#
    stdev <- as.numeric(factors[3])#
    time <- as.numeric(factors[4])#
    metric <- strsplit(files[jj], "\\_|\\.")[[1]]#
    metric <- metric[length(metric) - 1]#
#
    tmp <- read.table(paste0(dir, files[jj]), header=TRUE)#
#
    nproc <- ncol(tmp)#
    ndata <- nrow(tmp)#
    if(metric == "ari"){#
      ari.mat <- rbind(ari.mat,#
                       data.frame(corr=rep(corr, nproc*ndata),#
                                  stdev = rep(stdev, nproc*ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  procedure = rep(colnames(tmp), each=ndata),#
                                  ari = c(unlist(tmp))))#
    }#
    if(metric == "waic"){#
      waic.mat <- rbind(waic.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "lpml"){#
      lpml.mat <- rbind(lpml.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "probpeg"){#
      prob.peg <- rbind(prob.peg,#
                        data.frame(corr=rep(corr, ndata),#
                                  stdev = rep(stdev,ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  probpeg = tmp[,1]))#
#
    }#
#
  }#
#
  row.names(waic.mat) <- row.names(ari.mat) <- row.names(lpml.mat) <- row.names(prob.peg) <- NULL#
  waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  lpml.mat$procedure <- factor(lpml.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  ari.mat$procedure <- factor(ari.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"))#
  data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), as.factor(data$time),#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }#
#
  waic.mn <- data_mn(waic.mat)#
  lpml.mn <- data_mn(lpml.mat)#
  ari.mn <- data_mn(ari.mat)
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")
library(ggplot2)#
  # datatype 1#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")
gg.waic
library(ggplot2)#
  # datatype 1#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype1_waic2.pdf", height=6, width=6)#
  #datatype 2#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==2,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==2,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_ari2.pdf", height=6, width=6)#
  #datatype 3#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==3,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype3_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==3,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype3_ari2.pdf", height=6, width=6)#
  #datatype 4#
  gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() + ylim(0, 4000) +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype4_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mat[ari.mat$datatype==4,], aes(x=procedure, y=ari)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype4_ari2.pdf", height=6, width=6)
row.names(waic.mat) <- row.names(ari.mat) <- row.names(lpml.mat) <- row.names(prob.peg) <- NULL#
  waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))#
  lpml.mat$procedure <- factor(lpml.mat$procedure,#
                               levels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))#
  ari.mat$procedure <- factor(ari.mat$procedure,#
                               levels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))#
  data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), as.factor(data$time),#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }#
#
  waic.mn <- data_mn(waic.mat)#
  lpml.mn <- data_mn(lpml.mat)#
  ari.mn <- data_mn(ari.mat)#
  library(ggplot2)#
  # datatype 1#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")
gg.waic
head(waic.mat)
summary(waic.mat$procedure)
row.names(waic.mat) <- row.names(ari.mat) <- row.names(lpml.mat) <- row.names(prob.peg) <- NULL#
  waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"),#
                               labels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))
summary(waic.mat$procedure)
#  dir <- "~/Research/BYU/SpaceTimePPM/analysis/JCGSrev/simstudyresults2/"#
  dir <- "~/Research/BYU/SpaceTimePPM/analysis/JCGSrev/simstudyresults/"#
#
  files <- list.files(dir)#
  ari.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, ari=NULL)#
  waic.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  lpml.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  prob.peg <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, probpeg=NULL)#
  for(jj in 1:length(files)){#
    factors <- strsplit(files[jj], "\\_")[[1]][c(2,4,6,8)]#
    datatype <- as.numeric(factors[1])#
    corr <- as.numeric(factors[2])#
    stdev <- as.numeric(factors[3])#
    time <- as.numeric(factors[4])#
    metric <- strsplit(files[jj], "\\_|\\.")[[1]]#
    metric <- metric[length(metric) - 1]#
#
    tmp <- read.table(paste0(dir, files[jj]), header=TRUE)#
#
    nproc <- ncol(tmp)#
    ndata <- nrow(tmp)#
    if(metric == "ari"){#
      ari.mat <- rbind(ari.mat,#
                       data.frame(corr=rep(corr, nproc*ndata),#
                                  stdev = rep(stdev, nproc*ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  procedure = rep(colnames(tmp), each=ndata),#
                                  ari = c(unlist(tmp))))#
    }#
    if(metric == "waic"){#
      waic.mat <- rbind(waic.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "lpml"){#
      lpml.mat <- rbind(lpml.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "probpeg"){#
      prob.peg <- rbind(prob.peg,#
                        data.frame(corr=rep(corr, ndata),#
                                  stdev = rep(stdev,ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  probpeg = tmp[,1]))#
#
    }#
#
  }
row.names(waic.mat) <- row.names(ari.mat) <- row.names(lpml.mat) <- row.names(prob.peg) <- NULL#
  waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"),#
                               labels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))
summary(waic.mat$procedure)
lpml.mat$procedure <- factor(lpml.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"),#
                               labels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))#
  ari.mat$procedure <- factor(ari.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"),#
                               labels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))#
  data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), as.factor(data$time),#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }#
#
  waic.mn <- data_mn(waic.mat)#
  lpml.mn <- data_mn(lpml.mat)#
  ari.mn <- data_mn(ari.mat)#
  library(ggplot2)#
  # datatype 1#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")
gg.waic
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==2,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")
gg.waic
library(ggplot2)#
  # datatype 1#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype1_waic2.pdf", height=6, width=6)#
  #datatype 2#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==2,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==2,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_ari2.pdf", height=6, width=6)#
  #datatype 3#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==3,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype3_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==3,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype3_ari2.pdf", height=6, width=6)#
  #datatype 4#
  gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() + ylim(0, 4000) +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype4_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mat[ari.mat$datatype==4,], aes(x=procedure, y=ari)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype4_ari2.pdf", height=6, width=6)
head(waic.mn)
waic.mat$time <- factor(waic.mat$time,#
                               levels = c("5", "10"),#
                               labels = c("T = 5", "T = 10"))
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")
gg.waic
head(waic.mn)
waic.mat$time <- factor(waic.mat$time,#
                               levels = c(5, 10),#
                               labels = c("T = 5", "T = 10"))
data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), as.factor(data$time),#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }#
#
  waic.mn <- data_mn(waic.mat)
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")
gg.waic
head(waic.mn)
ari.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, ari=NULL)#
  waic.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  lpml.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  prob.peg <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, probpeg=NULL)#
  for(jj in 1:length(files)){#
    factors <- strsplit(files[jj], "\\_")[[1]][c(2,4,6,8)]#
    datatype <- as.numeric(factors[1])#
    corr <- as.numeric(factors[2])#
    stdev <- as.numeric(factors[3])#
    time <- as.numeric(factors[4])#
    metric <- strsplit(files[jj], "\\_|\\.")[[1]]#
    metric <- metric[length(metric) - 1]#
#
    tmp <- read.table(paste0(dir, files[jj]), header=TRUE)#
#
    nproc <- ncol(tmp)#
    ndata <- nrow(tmp)#
    if(metric == "ari"){#
      ari.mat <- rbind(ari.mat,#
                       data.frame(corr=rep(corr, nproc*ndata),#
                                  stdev = rep(stdev, nproc*ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  procedure = rep(colnames(tmp), each=ndata),#
                                  ari = c(unlist(tmp))))#
    }#
    if(metric == "waic"){#
      waic.mat <- rbind(waic.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "lpml"){#
      lpml.mat <- rbind(lpml.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "probpeg"){#
      prob.peg <- rbind(prob.peg,#
                        data.frame(corr=rep(corr, ndata),#
                                  stdev = rep(stdev,ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  probpeg = tmp[,1]))#
#
    }#
#
  }
waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"),#
                               labels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))#
  waic.mat$time <- factor(waic.mat$time,#
                               levels = c("5", "10"),#
                               labels = c("T = 5", "T = 10"))
head(waic.mat)
data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), as.factor(data$time),#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }#
#
  waic.mn <- data_mn(waic.mat)#
  lpml.mn <- data_mn(lpml.mat)#
  ari.mn <- data_mn(ari.mat)
head(waic.mn)
sapply(waic.mat, class)
data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), data$time,#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }
waic.mn <- data_mn(waic.mat)
head(waic.mn)
head(waic.mat)
data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), data$time,#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$time <- as.numeric(as.character(data.mn$time))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }
waic.mn <- data_mn(waic.mat)
head(waic.mn)
data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), data$time,#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$stdev <- as.numeric(as.character(data.mn$stdev))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }
waic.mn <- data_mn(waic.mat)
head(waic.mn)
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")
gg.waic
row.names(waic.mat) <- row.names(ari.mat) <- row.names(lpml.mat) <- row.names(prob.peg) <- NULL#
  waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"),#
                               labels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))#
  waic.mat$time <- factor(waic.mat$time,#
                               levels = c("5", "10"),#
                               labels = c("T = 5", "T = 10"))#
  waic.mat$stdev <- factor(waic.mat$stdev,#
                               levels = c("0.5", "1"),#
                               labels = c("v = 0.5", "v = 1"))#
  lpml.mat$procedure <- factor(lpml.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"),#
                               labels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))#
  lpml.mat$time <- factor(lpml.mat$time,#
                               levels = c("5", "10"),#
                               labels = c("T = 5", "T = 10"))#
  lpml.mat$stdev <- factor(lpml.mat$stdev,#
                               levels = c("0.5", "1"),#
                               labels = c("v = 0.5", "v = 1"))#
  ari.mat$procedure <- factor(ari.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"),#
                               labels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))#
  ari.mat$time <- factor(ari.mat$time,#
                               levels = c("5", "10"),#
                               labels = c("T = 5", "T = 10"))#
  ari.mat$stdev <- factor(ari.mat$stdev,#
                               levels = c("0.5", "1"),#
                               labels = c("v = 0.5", "v = 1"))
data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), as.factor(data$stdev),#
                       as.factor(data$datatype), data$time,#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }#
#
  waic.mn <- data_mn(waic.mat)#
  lpml.mn <- data_mn(lpml.mat)#
  ari.mn <- data_mn(ari.mat)
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")
gg.waic
head(waic.mn)
ari.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, ari=NULL)#
  waic.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  lpml.mat <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, procedure=NULL, waic=NULL)#
  prob.peg <- data.frame(corr=NULL, stdev=NULL, datatype=NULL, time=NULL, probpeg=NULL)#
  for(jj in 1:length(files)){#
    factors <- strsplit(files[jj], "\\_")[[1]][c(2,4,6,8)]#
    datatype <- as.numeric(factors[1])#
    corr <- as.numeric(factors[2])#
    stdev <- as.numeric(factors[3])#
    time <- as.numeric(factors[4])#
    metric <- strsplit(files[jj], "\\_|\\.")[[1]]#
    metric <- metric[length(metric) - 1]#
#
    tmp <- read.table(paste0(dir, files[jj]), header=TRUE)#
#
    nproc <- ncol(tmp)#
    ndata <- nrow(tmp)#
    if(metric == "ari"){#
      ari.mat <- rbind(ari.mat,#
                       data.frame(corr=rep(corr, nproc*ndata),#
                                  stdev = rep(stdev, nproc*ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  procedure = rep(colnames(tmp), each=ndata),#
                                  ari = c(unlist(tmp))))#
    }#
    if(metric == "waic"){#
      waic.mat <- rbind(waic.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "lpml"){#
      lpml.mat <- rbind(lpml.mat,#
                        data.frame(corr=rep(corr, nproc*ndata),#
                                   stdev = rep(stdev, nproc*ndata),#
                                   datatype = rep(datatype, nproc*ndata),#
                                   time = rep(time, nproc*ndata),#
                                   procedure = rep(colnames(tmp), each=ndata),#
                                   waic = c(unlist(tmp))))#
#
    }#
    if(metric == "probpeg"){#
      prob.peg <- rbind(prob.peg,#
                        data.frame(corr=rep(corr, ndata),#
                                  stdev = rep(stdev,ndata),#
                                  datatype = rep(datatype, nproc*ndata),#
                                  time = rep(time, nproc*ndata),#
                                  probpeg = tmp[,1]))#
#
    }#
#
  }
sapply(waic.mat, class)
waic.mat$procedure <- factor(waic.mat$procedure,#
                               levels = c("drpm", "indcrp", "longcrp", "lddp", "wddp", "gmddp"),#
                               labels = c("drpm", "ind_crp", "static_crp", "lddp", "wddp", "gmddp"))
waic.mat$time <- factor(waic.mat$time,#
                               levels = c("5", "10"),#
                               labels = c("T = 5", "T = 10"))
waic.mat$stdev <- factor(waic.mat$stdev,#
                               levels = c("0.5", "1"),#
                               labels = c("v = 0.5", "v = 1"))
sapply(waic.mat, class)
head(waic.mat)
data_mn <- function(data){#
    metric <- strsplit(deparse(substitute(data)), "\\.")[[1]][1]#
    data.mn <- aggregate(data[,6],#
                  list(as.factor(data$corr), data$stdev,#
                       as.factor(data$datatype), data$time,#
                       data$procedure),#
                median, na.rm=TRUE)#
    colnames(data.mn) <- c("corr","stdev","datatype","time","procedure",metric)#
    data.mn$corr <- as.numeric(as.character(data.mn$corr))#
    data.mn$datatype <- as.numeric(as.character(data.mn$datatype))#
    data.mn <- data.mn[data.mn$corr < 0.91,]#
    data.mn#
  }
waic.mn <- data_mn(waic.mat)
gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")
gg.waic
# datatype 1#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==1,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
               xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype1_waic2.pdf", height=6, width=6)#
  #datatype 2#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==2,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==2,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype2_ari2.pdf", height=6, width=6)#
  #datatype 3#
  gg.waic <- ggplot(data = waic.mn[waic.mn$datatype==3,], aes(x=as.numeric(corr), y=waic,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype3_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mn[ari.mn$datatype==3,], aes(x=as.numeric(corr), y=ari,col=procedure)) +#
               geom_line() +#
               geom_point() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype3_ari2.pdf", height=6, width=6)#
  #datatype 4#
  gg.waic <- ggplot(data = waic.mat[waic.mat$datatype==4,], aes(x=procedure, y=waic)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() + ylim(0, 4000) +#
          	  xlab("auto-correlation used to generate data") + ylab("WAIC")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype4_waic2.pdf", height=6, width=6)#
#
  gg.ari <- ggplot(data = ari.mat[ari.mat$datatype==4,], aes(x=procedure, y=ari)) +#
               geom_boxplot() +#
               facet_grid(time ~ stdev,scales="free") + theme_bw() +#
          	  xlab("auto-correlation used to generate data") + ylab("Adjusted Rand Index")#
  ggsave("~/Research/BYU/SpaceTimePPM/latex/plots/simstudy_datatype4_ari2.pdf", height=6, width=6)
files <- list.files("~/Research/BYU/SpaceTimePPM/analysis/JCGSrev/marginal_correlations")
corMatsmn <- list()#
corMatssd <- list()
corMatsmn <- list()#
corMatssd <- list()#
for(ii in 1:(length(files)/2)){#
  corMatsmn[[ii]] <- read.table(paste("~/Research/BYU/SpaceTimePPM/analysis/JCGSrev/marginal_correlations/", files[ii],sep=""),#
                           col.names=paste("lag", 0:9, sep=""))#
  corMatssd[[ii]] <- read.table(paste("~/Research/BYU/SpaceTimePPM/analysis/JCGSrev/marginal_correlations/",files[ii+(length(files)/2)],sep=""),#
                           col.names=paste("lag", 0:9, sep=""))#
}
phi <- c(0.01, 0.1, 0.25, 0.5, 0.75, 0.9, 0.99, 1, 0)#
rhos <- c(0,0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95)
par(mfrow=c(2,3))#
#
  for(ii in c(9, 2, 4, 6, 7, 8)){#
#
    plot(t(corMatsmn[[ii]][1,]), ylim=c(0.0,1), ylab="auto correlation", xlab="lag", #
			main=bquote(phi[1] == .(phi[ii])), type='n', cex.lab=1.25, cex.axis=1.25, cex.main=1.5)#
#
    jj <- 1#
    for(k in c(1, 4, 5, 6,7)){#
      lines(t(corMatsmn[[ii]][k,]), type="b", col="black", lty=jj, lwd=2)#
      jj <- jj + 1#
    }#
#
    legend(x="topright", #
        legend=c(as.expression(bquote(alpha == .(rhos[1]))), #
		                       bquote(alpha == .(rhos[4])),#
	    	                   bquote(alpha == .(rhos[5])),#
	        	               bquote(alpha == .(rhos[6])),#
	            	           bquote(alpha == .(rhos[7])),#
	            	           bquote(alpha == .(rhos[8]))), #
        ncol=2, col="black", lty=1:5, pch=1, lwd=2,#
        cex=1.5, seg.len=2.5)#
  }
setwd("~/Research/BYU/SpaceTimePPM/analysis/JCGSrev/simstudy1results")#
#
files <- list.files()#
#
out.mn <- list()#
out.sd <- list()#
out.dat <- list()#
fit.lpml <- list()#
fit.waic <- list()#
#
for(i in 1:length(files)){#
  print(files[i])#
  if(i < 8){#
    tmp <- read.table(files[i], header=TRUE)#
    fit.lpml[[i]] <- apply(tmp,2,function(x) mean(x[is.finite(x)]))[c(1,3)]#
    fit.waic[[i]] <- apply(tmp,2,function(x) mean(x[is.finite(x)]))[c(2,4)]#
  } else {#
    tmp <- read.table(files[i], header=FALSE)#
    out.mn[[i-7]] <- apply(cbind(tmp),2,mean, na.rm=TRUE)#
    out.sd[[i-7]] <- apply(cbind(tmp),2,function(x) {n <- sum(!is.na(x)); sd(x[!is.na(x)]/sqrt(n))})#
    out.dat[[i-7]] <- tmp#
  }#
}
out.mn
out.mn[15:21]
matrix(unlist(out.mn[15:21]), nrow=length(alpha), byrow=TRUE)
alpha <- c(0, 0.1, 0.25, 0.5, 0.75, 0.9, 0.9999)
matrix(unlist(out.mn[15:21]), nrow=length(alpha), byrow=TRUE)
out.mn[15:21]
rand.true
ord <- c(7,1:6)#
covs.mn <- cbind(out.mn[ord],out.sd[ord], out.mn[ord+7],out.sd[ord+7]); #
colnames(covs.mn) <- c("alpha","alphase","y","yse")#
rand.true <- cbind(matrix(unlist(out.mn[ord+14]), nrow=length(alpha), byrow=TRUE),#
                   matrix(unlist(out.sd[ord+14]), nrow=length(alpha), byrow=TRUE))
rand.true
out.sd
rand.true <- cbind(matrix(unlist(out.mn[ord+14]), nrow=length(alpha), byrow=TRUE),#
                   matrix(unlist(out.sd[ord+14]), nrow=length(alpha), byrow=TRUE))
rand.true
matrix(unlist(out.mn[ord+14]), nrow=length(alpha), byrow=TRUE)
matrix(unlist(out.sd[ord+14]), nrow=length(alpha), byrow=TRUE)
cbind(matrix(unlist(out.mn[ord+14]), nrow=length(alpha), byrow=TRUE),#
                   matrix(unlist(out.sd[ord+14]), nrow=length(alpha), byrow=TRUE))
xtable(rand.true[,c(1,6,2,7,3,8,4,9,5,10)])
library(xtable)
xtable(rand.true[,c(1,6,2,7,3,8,4,9,5,10)])
