alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
niter=4; nburn=1; nthin=1
nout <- (niter-nburn)/nthin
cat(nout,"valid iterations\n")
seed_choice = round(runif(1,0,1000))
set.seed(seed_choice)
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
devtools::load_all("../../drpm/")
cat(paste0("seed ",seed_choice,"\n==========================\n",date(),"\n\n"))
drpm1 <- drpm_fit(y=yt,
s_coords = sites,
M=1,
initial_partition = NULL,
starting_alpha = 0.5,
unit_specific_alpha = FALSE,
# time_specific_alpha = TRUE, # meaning a bit ambiguos
# Ok after experimenting it means that:
# - if true we let alpha be a param that changes over time.
#	At time 1 we have a chain with some behaviour,
#	at time 2 another chain with another behaviour, ecc
# - if false we instead fix alpha, ie all chains of all times
#	will be the same, as they refer to the same parameter estimation
# The authors in their tests set it to false, ie the fixed alpha
alpha_0=FALSE, # modello temporale, questa deve sempre essere falsa
# parameters from the drpm models comparison:
# case E0P1A1
eta1_0=FALSE,
phi1_0=TRUE,
time_specific_alpha = TRUE,
# modelPriors=c(0,100^2,1,1,1,1), # original default one
modelPriors=c(0,100,10,5,5,2,2,1), # author suggestion/used one
# così con 1,1 è una uniforme
alphaPriors=rbind(c(1,1)), # if time_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if unit_specific_alpha == TRUE
# alphaPriors=matrix(rep(c(1,1),105),105,2), # if both the above are TRUE
simpleModel = 0,
theta_tau2 = c(0, 2), # only used if simpleModel=1
# SpatialCohesion=3, # auxiliary similarity
SpatialCohesion=4, # double dipper similarity, default one
# cParms=c(0, 1, 2, 1), # default one
cParms=c(0, 1, 5, 1), # author suggestion/used one (with 5)
# mh=c(0.5,1,0.1, 0.1, 0.1), # default one
mh=c(0.1,0.1,0.7, 0.1, 0.1), # with a bit of author suggestion/used one
verbose=TRUE,
# draws=1100,burn=100,thin=1) # quick one
# draws=31000,burn=1000,thin=1) # for trace plot analysis
# draws=8000,burn=3000,thin=5) # a bit more serious seriou one
# draws=10000,burn=2000,thin=8) # more serious one
draws=niter,burn=nburn,thin=nthin) # adaptable one
cat(crayon::red("\nLPML =",drpm1$lpml, "\nWAIC =",drpm1$waic))
# seed_choice = round(runif(1,0,1000))
# set.seed(seed_choice)
TestModule1 <- juliaImport(juliaCall("include", testModule))
library(JuliaConnectoR)
juliaSetupOk()
# setup project
juliaEval("using Pkg; Pkg.status()")
